2025-03-16 03:30:57,050 - root - INFO - LabelQuick 应用程序启动
2025-03-16 03:30:57,287 - hydra.core.utils - DEBUG - Setting JobRuntime:name=UNKNOWN_NAME
2025-03-16 03:30:57,287 - hydra.core.utils - DEBUG - Setting JobRuntime:name=app
2025-03-16 03:31:01,364 - root - INFO - 初始化主界面
2025-03-16 03:31:02,057 - root - DEBUG - UI 设置完成
2025-03-16 03:31:02,057 - root - DEBUG - 初始化变量完成
2025-03-16 03:31:04,286 - root - INFO - Loaded checkpoint sucessfully
2025-03-16 03:31:06,566 - root - INFO - Loaded checkpoint sucessfully
2025-03-16 03:31:06,585 - root - DEBUG - 初始化 Anything_TW 和 AnythingVideo_TW 完成
2025-03-16 03:31:06,585 - root - DEBUG - 初始化定时器完成
2025-03-16 03:31:06,585 - root - DEBUG - 开始连接信号和槽
2025-03-16 03:31:06,586 - root - DEBUG - 信号和槽连接完成
2025-03-16 03:31:06,586 - root - DEBUG - 初始化标签格式: xml
2025-03-16 03:31:06,586 - root - INFO - 主界面初始化完成
2025-03-16 03:31:52,606 - root - INFO - 标签格式已更改: xml -> yolo
2025-03-16 03:31:52,606 - root - DEBUG - 检查 YOLO 格式的类别映射
2025-03-16 03:31:52,606 - root - DEBUG - 类别映射为空，尝试从现有标签初始化
2025-03-16 03:31:52,606 - root - DEBUG - 当前类别映射: {}
2025-03-16 03:31:52,607 - root - INFO - 类别映射已保存到: D:/workspace/LabelQuick/video\classes.txt
2025-03-16 03:32:11,776 - root - INFO - 选择视频: D:/workspace/LabelQuick/video/ceshi.mp4, 输出目录: D:/workspace/LabelQuick/video
2025-03-16 03:32:11,778 - root - INFO - 创建YOLO训练目录结构: D:/workspace/LabelQuick/video\images, D:/workspace/LabelQuick/video\labels
2025-03-16 03:32:11,778 - root - DEBUG - 训练图像目录中没有图像，提取视频第一帧
2025-03-16 03:32:11,816 - root - DEBUG - 读取视频第一帧成功
2025-03-16 03:32:11,830 - root - INFO - 保存第一帧到: D:/workspace/LabelQuick/video\images\train\0.jpg
2025-03-16 03:32:11,841 - root - DEBUG - 设置 AVT 的视频目录: D:/workspace/LabelQuick/video\images\train
2025-03-16 03:32:11,842 - sampro.LabelVideo_TW - DEBUG - 找到 1 个帧文件
2025-03-16 03:32:11,842 - sampro.LabelVideo_TW - DEBUG - 使用数字提取排序成功
2025-03-16 03:32:11,842 - sampro.LabelVideo_TW - DEBUG - 排序后的前5个文件: ['0.jpg']
2025-03-16 03:32:11,870 - root - DEBUG - AVT 视频目录设置成功
2025-03-16 03:32:11,870 - root - DEBUG - 初始化 AVT 的推理状态: D:/workspace/LabelQuick/video\images\train
2025-03-16 03:32:19,295 - root - DEBUG - AVT 推理状态初始化成功
2025-03-16 03:32:19,296 - root - DEBUG - 设置图像路径: D:/workspace/LabelQuick/video\images\train\0.jpg
2025-03-16 03:32:19,296 - root - DEBUG - 图像名称: 0
2025-03-16 03:32:19,321 - root - DEBUG - 调整图像大小: D:/workspace/LabelQuick/video\images\train\0.jpg, 1300x736
2025-03-16 03:32:19,342 - root - INFO - For numpy array image, we assume (HxWxC) format
2025-03-16 03:32:19,460 - root - INFO - Computing image embeddings for the provided image...
2025-03-16 03:32:26,823 - root - INFO - Image embeddings computed.
2025-03-16 03:32:26,825 - root - DEBUG - 设置 AT 的图像
2025-03-16 03:32:26,838 - root - DEBUG - 显示图像完成
2025-03-16 03:32:26,838 - root - DEBUG - 设置鼠标点击事件
2025-03-16 03:32:35,746 - root - INFO - 鼠标点击事件: 坐标=(562, 173)
2025-03-16 03:32:35,746 - root - DEBUG - 设置点击坐标: (562, 173), 方法: 1
2025-03-16 03:32:35,746 - root - DEBUG - 设置 AVT 的点击坐标: (562, 173), 方法: 1
2025-03-16 03:32:35,746 - root - DEBUG - 调用 AVT.add_new_points_or_box
2025-03-16 03:32:35,947 - root - DEBUG - AVT.add_new_points_or_box 调用成功
2025-03-16 03:32:35,948 - root - DEBUG - 设置 AT 的点击坐标: (562, 173), 方法: 1
2025-03-16 03:32:35,948 - root - DEBUG - 调用 AT.Create_Mask
2025-03-16 03:32:36,013 - root - DEBUG - 调用 AT.Draw_Mask
2025-03-16 03:32:36,024 - root - DEBUG - 设置点击事件状态: clicked_event=True, paint_event=False
2025-03-16 03:32:38,403 - root - DEBUG - 开始显示已存在的标签和边界框
2025-03-16 03:32:38,417 - root - DEBUG - 没有标签需要显示，显示原始图像
2025-03-16 03:32:40,608 - root - INFO - 鼠标点击事件: 坐标=(562, 178)
2025-03-16 03:32:40,609 - root - DEBUG - 设置点击坐标: (562, 178), 方法: 1
2025-03-16 03:32:40,609 - root - DEBUG - 设置 AVT 的点击坐标: (562, 178), 方法: 1
2025-03-16 03:32:40,609 - root - DEBUG - 调用 AVT.add_new_points_or_box
2025-03-16 03:32:40,696 - root - DEBUG - AVT.add_new_points_or_box 调用成功
2025-03-16 03:32:40,696 - root - DEBUG - 设置 AT 的点击坐标: (562, 178), 方法: 1
2025-03-16 03:32:40,696 - root - DEBUG - 调用 AT.Create_Mask
2025-03-16 03:32:40,765 - root - DEBUG - 调用 AT.Draw_Mask
2025-03-16 03:32:40,773 - root - DEBUG - 设置点击事件状态: clicked_event=True, paint_event=False
2025-03-16 03:32:43,114 - root - DEBUG - 开始显示已存在的标签和边界框
2025-03-16 03:32:43,125 - root - DEBUG - 没有标签需要显示，显示原始图像
2025-03-16 03:32:45,098 - root - INFO - 鼠标点击事件: 坐标=(567, 172)
2025-03-16 03:32:45,099 - root - DEBUG - 设置点击坐标: (567, 172), 方法: 1
2025-03-16 03:32:45,099 - root - DEBUG - 设置 AVT 的点击坐标: (567, 172), 方法: 1
2025-03-16 03:32:45,099 - root - DEBUG - 调用 AVT.add_new_points_or_box
2025-03-16 03:32:45,207 - root - DEBUG - AVT.add_new_points_or_box 调用成功
2025-03-16 03:32:45,207 - root - DEBUG - 设置 AT 的点击坐标: (567, 172), 方法: 1
2025-03-16 03:32:45,207 - root - DEBUG - 调用 AT.Create_Mask
2025-03-16 03:32:45,274 - root - DEBUG - 调用 AT.Draw_Mask
2025-03-16 03:32:45,281 - root - DEBUG - 设置点击事件状态: clicked_event=True, paint_event=False
2025-03-16 03:32:50,925 - root - INFO - 视频对话框确认，标签文本: 篮球
2025-03-16 03:32:50,925 - root - DEBUG - 添加标签到列表: 篮球
2025-03-16 03:32:50,925 - root - DEBUG - 初始化 list_labels 列表
2025-03-16 03:32:50,926 - root - DEBUG - 确保YOLO目录结构存在: D:/workspace/LabelQuick/video\images\train, D:/workspace/LabelQuick/video\labels\train
2025-03-16 03:32:50,926 - root - DEBUG - 使用 YOLO 格式保存标签: 篮球
2025-03-16 03:32:50,926 - root - DEBUG - 边界框坐标: x=561, y=171, w=18, h=27
2025-03-16 03:32:50,926 - util.yolofile - DEBUG - 创建 YOLO 标签信息: 图像=0, 尺寸=1300x736, 文本=篮球
2025-03-16 03:32:50,927 - util.yolofile - DEBUG - 边界框: x=561, y=171, w=18, h=27
2025-03-16 03:32:50,927 - util.yolofile - DEBUG - YOLO 标签文件路径: D:/workspace/LabelQuick/video\0.txt
2025-03-16 03:32:50,927 - util.yolofile - DEBUG - YOLO 标签信息已创建: 路径=D:/workspace/LabelQuick/video\0.txt, 大小=[1300, 736, 3], 边界框=[561, 171, 579, 198]
2025-03-16 03:32:50,927 - root - DEBUG - 添加新类别到映射: 篮球 -> 0
2025-03-16 03:32:50,927 - root - INFO - 类别映射已保存到: D:/workspace/LabelQuick/video\labels\classes.txt
2025-03-16 03:32:50,928 - root - DEBUG - 保存 YOLO 标签到: D:/workspace/LabelQuick/video\labels\train\0.txt, 大小: [1300, 736, 3], 类别映射: {'篮球': 0}
2025-03-16 03:32:50,928 - util.yolofile - DEBUG - 转换坐标到 YOLO 格式: 图像尺寸=(1300, 736), 边界框=(561, 171, 579, 198)
2025-03-16 03:32:50,929 - util.yolofile - DEBUG - YOLO 格式坐标: 中心点=(0.438462, 0.250679), 尺寸=(0.013846, 0.036685)
2025-03-16 03:32:50,929 - root - DEBUG - 写入行: 0 0.438462 0.250679 0.013846 0.036685
2025-03-16 03:32:50,929 - root - INFO - YOLO 标签已保存到: D:/workspace/LabelQuick/video\labels\train\0.txt
2025-03-16 03:32:50,929 - root - DEBUG - 启用开始检测打标按钮
2025-03-16 03:32:50,929 - root - DEBUG - 重置点击和绘制事件状态
2025-03-16 03:32:50,929 - root - DEBUG - 开始显示已存在的标签和边界框
2025-03-16 03:32:50,941 - root - DEBUG - 显示 1 个点击标签和 0 个绘制标签
2025-03-16 03:32:50,941 - root - DEBUG - 绘制点击标签 1: (561, 171) - (579, 198)
2025-03-16 03:32:50,943 - root - DEBUG - 标签显示完成
2025-03-16 03:32:50,944 - root - DEBUG - 显示已存在的标签
2025-03-16 03:33:09,185 - root - INFO - 开始视频检测打标
2025-03-16 03:33:09,186 - root - DEBUG - 禁用开始检测打标按钮
2025-03-16 03:33:09,186 - root - DEBUG - 视频路径: D:/workspace/LabelQuick/video/ceshi.mp4, 输出目录: D:/workspace/LabelQuick/video
2025-03-16 03:33:09,186 - root - DEBUG - 设置 AVT 的点击坐标: (567, 172), 方法: 1
2025-03-16 03:33:09,186 - root - DEBUG - AVT 点击坐标设置成功
2025-03-16 03:33:09,186 - root - DEBUG - 添加点击点到模型
2025-03-16 03:33:09,293 - root - DEBUG - 点击点添加成功
2025-03-16 03:33:09,293 - root - DEBUG - 创建视频处理线程，点击坐标: (567, 172), 方法: 1, 文本: 篮球
2025-03-16 03:33:09,293 - root - DEBUG - 保存路径: D:/workspace/LabelQuick/video, 格式: yolo, 类别映射: {'篮球': 0}
2025-03-16 03:33:09,293 - root - INFO - 初始化视频处理线程
2025-03-16 03:33:09,294 - root - DEBUG - 视频处理线程初始化完成: 视频路径=D:/workspace/LabelQuick/video/ceshi.mp4, 输出目录=D:/workspace/LabelQuick/video, 格式=yolo
2025-03-16 03:33:09,294 - root - DEBUG - 连接视频处理线程信号
2025-03-16 03:33:09,295 - root - INFO - 启动视频处理线程
2025-03-16 03:33:09,295 - root - DEBUG - 禁用其他按钮，防止重复处理
2025-03-16 03:33:09,296 - root - INFO - 开始视频处理: 点击坐标=(567, 172), 方法=1
2025-03-16 03:33:09,297 - root - DEBUG - 创建输出目录: D:/workspace/LabelQuick/video 和 mask 子目录: D:/workspace/LabelQuick/video\mask
2025-03-16 03:33:09,297 - root - DEBUG - 确保YOLO目录结构存在: D:/workspace/LabelQuick/video\images\train, D:/workspace/LabelQuick/video\labels\train
2025-03-16 03:33:09,298 - root - INFO - 开始处理视频帧，总帧数: 1
2025-03-16 03:33:09,298 - root - DEBUG - 处理第 1/1 帧: D:/workspace/LabelQuick/video\images\train\0.jpg
2025-03-16 03:33:09,298 - root - DEBUG - 调用 Draw_Mask_at_frame 处理帧，格式: yolo
2025-03-16 03:33:09,298 - sampro.LabelVideo_TW - INFO - 开始绘制轮廓，格式: yolo, 文本: 篮球
2025-03-16 03:33:09,298 - sampro.LabelVideo_TW - DEBUG - 起始帧: 0, 返回帧: False, 保存图像路径: D:/workspace/LabelQuick/video\mask, 保存标签路径: D:/workspace/LabelQuick/video
2025-03-16 03:33:09,298 - sampro.LabelVideo_TW - DEBUG - 开始在视频中传播分割结果
2025-03-16 03:33:09,401 - sampro.LabelVideo_TW - DEBUG - 帧 0 的分割结果: 对象 IDs [1]
2025-03-16 03:33:09,402 - sampro.LabelVideo_TW - DEBUG - 找到 1 个帧
2025-03-16 03:33:09,402 - sampro.LabelVideo_TW - INFO - 开始处理 1 个帧
2025-03-16 03:33:09,402 - sampro.LabelVideo_TW - DEBUG - 处理帧 0: D:/workspace/LabelQuick/video\images\train\0.jpg
2025-03-16 03:33:09,418 - sampro.LabelVideo_TW - DEBUG - 帧 0 有 1 个分割对象
2025-03-16 03:33:09,418 - sampro.LabelVideo_TW - DEBUG - 处理帧 0 的对象 1
2025-03-16 03:33:09,419 - sampro.LabelVideo_TW - DEBUG - 绘制掩码，对象 ID: 1
2025-03-16 03:33:09,419 - sampro.LabelVideo_TW - DEBUG - 掩码形状: (544, 960, 1)
2025-03-16 03:33:09,438 - root - ERROR - 处理第 1 帧时出错: OpenCV(4.8.0) D:\a\opencv-python\opencv-python\opencv\modules\core\src\arithm.cpp:230: error: (-215:Assertion failed) (mtype == CV_8U || mtype == CV_8S) && _mask.sameSize(*psrc1) in function 'cv::binary_op'

2025-03-16 03:33:09,441 - root - ERROR - Traceback (most recent call last):
  File "D:\workspace\LabelQuick\GUI\main.py", line 130, in run
    processed_frame, xml_messages = self.AVT.Draw_Mask_at_frame(
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\workspace\LabelQuick\sampro\LabelVideo_TW.py", line 434, in Draw_Mask_at_frame
    result = self.Draw_Mask(out_mask, frame.copy(), out_obj_id)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "D:\workspace\LabelQuick\sampro\LabelVideo_TW.py", line 257, in Draw_Mask
    color_mask = cv2.bitwise_and(color_mask, color_mask, mask=mask.squeeze())
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
cv2.error: OpenCV(4.8.0) D:\a\opencv-python\opencv-python\opencv\modules\core\src\arithm.cpp:230: error: (-215:Assertion failed) (mtype == CV_8U || mtype == CV_8S) && _mask.sameSize(*psrc1) in function 'cv::binary_op'


2025-03-16 03:33:09,443 - root - INFO - 视频处理完成，发送完成信号
2025-03-16 03:33:09,444 - root - INFO - 视频处理完成
2025-03-16 03:33:09,445 - root - DEBUG - 收到 0 个标签消息
2025-03-16 03:33:09,445 - root - INFO - 检测打标过程全部完成
2025-03-16 03:33:09,445 - root - INFO - 视频处理完成
2025-03-16 03:33:09,445 - root - DEBUG - 收到 0 个标签消息
2025-03-16 03:33:09,445 - root - INFO - 检测打标过程全部完成
